---
title: Going Deeper with R
format:
  rfortherestofus-slides-revealjs:
    menu: false
    progress: false
    slide-number: true
    show-slide-number: print
    center: true
    incremental: true
    auto-animate: true
execute: 
  message: false
  warning: false
  cache: false
title-slide-attributes:
  data-background-image: assets/rru-hex-bg-gradient-dark.svg
  data-background-size: cover
editor_options: 
  chunk_output_type: console
knitr:
  opts_chunk: 
    dev: ragg_png
---


```{r}
#| echo: false

library(tidyverse)
library(readxl)
library(janitor)
library(here)
library(gt)
library(rmarkdown)
library(palmerpenguins)
library(ggtext)
library(scales)
library(ggrepel)
```

# Advanced Markdown {.inverse background-image="assets/fancy-text.jpg"}

## Links

This is a [link to the Rest for the Rest of Us website](http://rfortherestofus.com/)

::: {.fragment}
```{markdown}
#| echo: true
This is a [link to the Rest for the Rest of Us website](http://rfortherestofus.com/)
```
:::

## Images

![](assets/girl-meditating.jpg)

## Image Sizing



::: {.fragment}
Set the width of your images in pixels
```{markdown}
#| echo: true
![](assets/girl-meditating.jpg){width=300}
```
:::



::: {.fragment}
Set the width of your images in inches
```{markdown}
#| echo: true
![](assets/girl-meditating.jpg){width=4in}
```
:::



::: {.fragment}
Set the width of your images as a percent
```{markdown}
#| echo: true
![](assets/girl-meditating.jpg){width=50%}
```
:::

## Image Alignment

Images are centered by default but you can change this.



::: {.fragment}
Align images to the right 
```{markdown}
#| echo: true
![](assets/girl-meditating.jpg){fig-align="right"}
```
:::



::: {.fragment}
Align images to the left 
```{markdown}
#| echo: true
![](assets/girl-meditating.jpg){fig-align="left"}
```
:::


## Alt Text

::: {.fragment}
```{markdown}
#| echo: true
![](assets/girl-meditating.jpg){fig-alt="A girl meditating"}
```
:::

## Blockquotes

And here is what Abraham Lincoln said:

::: {.fragment}
> Four score and seven years ago ...
:::


::: {.fragment}
```{markdown}
#| echo: true
> Four score and seven years ago ...
```
:::




## Footnotes

Here is some text.^[Here is a footnote]

## Footnotes

```{markdown}
#| echo: true
Here is some text.^[Here is a footnote]
```


## My Turn {.my-turn}

I'll create a Quarto document and do the following:

1. Add a link

1. Add an image

1. Add a blockquote

1. Add a footnote

## Your Turn {.your-turn}

- Add the Oregon Department of Education logo to the top of your report. You can find it at https://github.com/rfortherestofus/going-deeper/raw/master/slides/assets/ode-logo.jpg

- Add the following text (make sure you include the link, which points to https://www.oregon.gov/ode/pages/default.aspx):

::: {.fragment}
This is a report for the [Oregon Department of Education](https://www.oregon.gov/ode/pages/default.aspx) on diversity in Oregon school districts. 
:::

## Your Turn, Continued {.your-turn}

- Add the following text as a block quote:

::: {.fragment}
> The Oregon Department of Education fosters equity and excellence for every learner through collaboration with educators, partners, and communities.
:::

- Add a link to the source for mission statement above (https://www.oregon.gov/ode/about-us/Pages/default.aspx) as a footnote.

# Tables {.inverse background-image="assets/table.jpg"}

## Don't Use the Default Output

![](assets/default-table-output.png){fig-width="100%"}


## Table Packages {.inverse background-image="assets/packages.jpg"} 

## Static Tables {.inverse}

## `flextable` {.center-slide}

![](assets/flextable.svg) 

## `gt` {.center-slide}

![](assets/gt_parts_of_a_table.svg)

## Interactive Tables {.inverse}

## Interactive Tables with `gt` {.center-slide}

![](assets/gt-interactive.gif)

::: {.notes}
https://posit.co/blog/new-in-gt-0-9-0-interactive-tables/
:::

## `reactable` {.center-slide}

![](assets/reactable-example.gif)

## My Turn {.my-turn}

I'll demonstrate making an effective table using `gt`

::: {.notes}
- Title
- Set Names (cols_label)
- Align
- Width
- Formatting numbers
- Color shading
- Source
:::

## Your Turn {.your-turn}

- Copy the starter code below into RStudio and use it to make a table using `flextable`, `gt`, or `reactable`.

- Work on adjusting your column names, column width, number formatting, and anything else you might want to try out.

# Advanced YAML and Code Chunk Options {.inverse background-image="assets/book.jpg"}

::: {.notes}
https://quarto.org/docs/reference/cells/cells-knitr.html
:::

## Table of Contents


::: {.fragment}
Add a table of contents

```{yaml}
#| echo: true
#| code-line-numbers: "3"
format: 
  html:
    toc: true
```
:::



::: {.fragment}
Choose how many levels of headings should be included in the table of contents
```{yaml}
#| echo: true
#| code-line-numbers: "4"
format: 
  html:
    toc: true
    toc-depth: 2
```
:::

::: {.fragment}
Choose the location for the table of contents
```{yaml}
#| echo: true
#| code-line-numbers: "5"
format: 
  html:
    toc: true
    toc-depth: 2
    toc-location: "left"
```
:::


## Set the Default Figure Width and Height

::: {.fragment}
```{yaml}
#| echo: true
#| code-line-numbers: "3-4"
format: 
  html:
    fig-width: 4
    fig-height: 6
```
:::

## Override Default Figure Width and Height 

::: {.fragment}
````
```{{r}}
#| fig-width: 3
#| fig-height: 5

penguins |> 
  filter(year == 2007) |> 
  count(island) |> 
  ggplot(aes(x = n,
             y = reorder(island, n),
             fill = island,
             label = n)) +
  geom_col() +
  geom_text(family = "Papyrus") +
  labs(title = "My Amazing Penguins Chart") +
  theme_minimal(base_family = "Papyrus") +
  theme(axis.text = element_text(family = "Inter"))
```
````
:::

## Captions and Alt Text

::: {.fragment}
````
```{{r}}
#| fig-cap: "A plot about penguins"
#| fig-alt: "A bar chart showing the number of penguins on each island with data from the palmerpenguins R package"

penguins |> 
  filter(year == 2007) |> 
  count(island) |> 
  ggplot(aes(x = n,
             y = reorder(island, n),
             fill = island,
             label = n)) +
  geom_col() +
  geom_text(family = "Papyrus") +
  labs(title = "My Amazing Penguins Chart") +
  theme_minimal(base_family = "Papyrus") +
  theme(axis.text = element_text(family = "Inter"))
```
````
:::

# Inline R Code {.inverse background-image="assets/inline-skating.jpg"}

::: {.notes}
The goal is to make everything reproducible, including text
:::

## Inline R Code

```{r}
oregon_school_districts <- 
  read_excel(here("data-raw/oregon-districts.xlsx")) |>  
  nrow()
```


These two lines of text look identical, right?

::: {.fragment}
There are 210 school districts in Oregon.
:::

::: {.fragment}
There are `r oregon_school_districts` school districts in Oregon.
:::

## Inline R Code

They're not identical!

::: {.fragment}
There are 210 school districts in Oregon.
:::

::: {.fragment}
```{markdown}
#| echo: true
#| code-line-numbers: false
There are `r oregon_school_districts` school districts in Oregon.
```
:::

## My Turn {.my-turn}

I'll add a line to my report that uses inline R code.

## Your Turn {.your-turn}

Add a line to your report that uses inline R code.

# Making Your Reports Shine: Word Edition {.inverse background-image="assets/microsoft-word.jpg"}

## Making Your Reports Shine: Word Edition

```{yaml}
#| echo: true
#| eval: false
format:
  docx:
    reference-doc: custom-reference-doc.docx
```


::: {.notes}
https://quarto.org/docs/output-formats/ms-word-templates.html
:::

## My Turn {.my-turn}

I'll use a reference document to change the look and feel of my report that is rendered to Word.

## Your Turn {.your-turn}

Use a reference document to change the look and feel of your report when rendered to Word.


# Making Your Reports Shine: HTML Edition {.inverse background-image="assets/html.jpg"}

## Built-In Themes

Quarto has a number of built-in themes

::: {.notes}
https://quarto.org/docs/output-formats/html-themes.html
:::

## Customizing Built-In Themes

:::: {.columns}

::: {.column width="50%"}
- `max-width`
- `mainfont`
- `fontsize`
- `fontcolor`
- `linkcolor`
:::

::: {.column width="50%"}
- `monofont`
- `monobackgroundcolor`
- `linestretch`
- `backgroundcolor`
- `margin-left`, `margin-right`, `margin-top`, `margin-bottom`
:::

::::

## Customizing Built-In Themes

```{yaml}
#| echo: true
title: "My Document"
format:
  html: 
    theme: cosmo
    mainfont: Inter
    fontsize: 20px
```


## Creating Your Own Theme

```{yaml}
#| echo: true
title: "My Document"
format:
  html: 
    theme: custom.scss
```

## Anatomy of a `.scss` File

```{scss}
#| echo: true
/*-- scss:defaults --*/

/*-- scss:rules --*/
```

## Anatomy of a `.scss` File

```{scss}
#| echo: true
#| code-line-numbers: "1-4"
/*-- scss:defaults --*/
$body-bg: red;
$body-color: white;
$font-size-root: 20px;

/*-- scss:rules --*/
```

::: {.notes}
Talk about Sass variables
:::

## Anatomy of a `.scss` File

```{scss}
#| echo: true
#| code-line-numbers: "6-9"
/*-- scss:defaults --*/
$body-bg: red;
$body-color: white;
$font-size-root: 20px;

/*-- scss:rules --*/
h1 {
  text-shadow: -1px -1px 0 rgba(0, 0, 0, .3);
}
```

## Your Turn {.your-turn}

1. Apply a built-in HTML theme to your report. 

1. Customize the built-in HTML theme.

1. Create your own theme using an `.scss` file and Sass variables

1. If you know any CSS, customize your `.scss` file further.

# Making Your Reports Shine: PDF Edition {.inverse background-image="assets/report.jpg"}

---

[![](assets/littlejohn-latex-tweet.png)](https://twitter.com/jefflittlejohn/status/1216869830726316033)

---

[![](assets/heiss-latex-tweet.png)](https://twitter.com/andrewheiss/status/1204870408148832257)

---

[![](assets/latex-table-tweet.png)](https://twitter.com/MattCowgill/status/1249190934392307712)

---

[![](assets/latex-book-tweet.png)](https://twitter.com/thattommyhall/status/1248679614337241089)

## Making Your Reports Shine: PDF Edition

- typst

# Presentations {.inverse background-image="assets/projector.jpg"}

# Dashboards {.inverse background-image="assets/dashboard.jpg"}

# Websites {.inverse background-image="assets/website.jpg"}

# Quarto Extensions {.inverse background-image="assets/extension.jpg"}

# Publishing Your Work {.inverse background-image="assets/publish.jpg"}






